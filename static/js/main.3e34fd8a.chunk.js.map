{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","id","name","color","style","getAll","fetch","then","response","json","get5First","sort","gA","gB","localeCompare","slice","getRedGoods","filter","good","App","useState","visibleGoods","setVisibleGoods","hasLoadingError","setHasLoadingError","handleClick","useCallback","goodsType","a","className","type","onClick","marginLeft","length","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGD,GAJID,SCPR,SAASI,IACd,OAAOC,MAHI,yEAGWC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAG3C,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAR,GAAK,OAAIA,EACZY,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGV,KAAKY,cAAcD,EAAGX,SAC1Ca,MAAM,EAAG,OAIHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMkB,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKf,aCbhCgB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAOMC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAP,eAAAC,EAAA,+EAEwBD,IAFxB,OAEU5B,EAFV,OAIIuB,EAAgBvB,GAJpB,gDAMIyB,GAAmB,GANvB,yDAD6B,sDAS1B,IAGL,OACE,sBAAKK,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAYpB,IAH7B,4BAQA,wBACEyB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMN,EAAYf,IAH7B,gCAQA,wBACEoB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMN,EAAYT,IAH7B,4BAOCO,GACI,sBAAMnB,MA7CU,CACvBD,MAAO,MACP6B,WAAY,QA2CL,0CAEJX,EAAaY,OAAS,GAAK,cAAC,EAAD,CAAWlC,MAAOsB,QCtDpDa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3e34fd8a.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(({ id, name, color }) => (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL).then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((gA, gB) => gA.name.localeCompare(gB.name))\n      .slice(0, 5));\n  // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const errorMesageStyle = {\n    color: 'red',\n    marginLeft: '10px',\n  };\n\n  const handleClick = useCallback(\n    async (goodsType: () => Promise<Good[]>) => {\n      try {\n        const goods = await goodsType();\n\n        setVisibleGoods(goods);\n      } catch (error) {\n        setHasLoadingError(true);\n      }\n    }, [],\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleClick(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleClick(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleClick(getRedGoods)}\n      >\n        Load red goods\n      </button>\n      {hasLoadingError\n        && <span style={errorMesageStyle}>Error - failed to load goods</span>}\n\n      {visibleGoods.length > 0 && <GoodsList goods={visibleGoods} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}