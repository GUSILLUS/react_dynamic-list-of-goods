{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","id","color","name","style","getAll","fetch","then","response","json","get5First","sort","gA","gB","localeCompare","slice","getRedGoods","filter","App","useState","visibleGoods","setVisibleGoods","handleClick","useCallback","goodsType","a","console","log","className","type","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KAEnB,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAEF,SAHX,SAKGC,GAJIF,SCVV,SAASI,IACd,OAAOC,MAHI,yEAGWC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAG3C,IAAMC,EAAY,WACvB,OAAOL,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZa,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGT,KAAKW,cAAcD,EAAGV,SAC1CY,MAAM,EAAG,OAIHC,EAAc,WACzB,OAAOX,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMmB,QAAO,SAAAjB,GAAI,MAAmB,QAAfA,EAAKE,aCbhCgB,EAAgB,WAC3B,MAAwCC,mBAAiB,IAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAP,eAAAC,EAAA,+EAEwBD,IAFxB,OAEU1B,EAFV,OAIIuB,EAAgBvB,GAJpB,gDAOI4B,QAAQC,IAAR,MAPJ,yDAD6B,sDAU1B,IAGL,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAAYjB,IAH7B,4BAQA,wBACEwB,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMR,EAAYZ,IAH7B,gCAQA,wBACEmB,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMR,EAAYN,IAH7B,4BAQCI,EAAaW,OAAS,GAAK,cAAC,EAAD,CAAWjC,MAAOsB,QC/CpDY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f3c70757.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map(good => {\n        const { id, color, name } = good;\n\n        return (\n          <li\n            key={id}\n            data-cy=\"good\"\n            style={{ color }}\n          >\n            {name}\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL).then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((gA, gB) => gA.name.localeCompare(gB.name))\n      .slice(0, 5));\n  // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState<Good[]>([]);\n\n  const handleClick = useCallback(\n    async (goodsType: () => Promise<Good[]>) => {\n      try {\n        const goods = await goodsType();\n\n        setVisibleGoods(goods);\n      } catch (error) {\n        // eslint-disable-next-line no-console\n        console.log(error);\n      }\n    }, [],\n  );\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => handleClick(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => handleClick(get5First)}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => handleClick(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {visibleGoods.length > 0 && <GoodsList goods={visibleGoods} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}